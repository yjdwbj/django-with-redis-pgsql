"""
Django settings for mqtt_auth project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g4lwr(vyn&l83zk+%(++f#x0a8p@5mp0tr$%++i+bl@+g#k2gh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_AGE = 600

SECURE_HSTS_SECONDS = 315600


CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION" : "unix://:f4e4821080ca489d3361a520fc2123495755559b45fb24323c5b02e79163e425@/var/run/redis/redis.sock?db=1",
        "LOCATION": "redis://:f4e4821080ca489d3361a520fc2123495755559b45fb24323c5b02e79163e425@192.168.25.100:6379",
        "OPTIONS": {
            "DB":0,
            "PASSWORD":"f4e4821080ca489d3361a520fc2123495755559b45fb24323c5b02e79163e425",
            
            "CONNECTION_POOL_KWARGS": {"max_connections": 65535},
        }
    }
}
 
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"


# BOOTSTRAP3 = {
# 
#     # The URL to the jQuery JavaScript file
#     'jquery_url': '//code.jquery.com/jquery.min.js',
# 
#     # The Bootstrap base URL
#     'base_url': '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/',
# 
#     # The complete URL to the Bootstrap CSS file (None means derive it from base_url)
#     'css_url': None,
# 
#     # The complete URL to the Bootstrap CSS file (None means no theme)
#     'theme_url': None,
# 
#     # The complete URL to the Bootstrap JavaScript file (None means derive it from base_url)
#     'javascript_url': None,
# 
#     # Put JavaScript in the HEAD section of the HTML document (only relevant if you use bootstrap3.html)
#     'javascript_in_head': False,
# 
#     # Include jQuery with Bootstrap JavaScript (affects django-bootstrap3 template tags)
#     'include_jquery': False,
# 
#     # Label class to use in horizontal forms
#     'horizontal_label_class': 'col-md-3',
# 
#     # Field class to use in horizontal forms
#     'horizontal_field_class': 'col-md-9',
# 
#     # Set HTML required attribute on required fields
#     'set_required': True,
# 
#     # Set HTML disabled attribute on disabled fields
#     'set_disabled': False,
# 
#     # Set placeholder attributes to label if no placeholder is provided
#     'set_placeholder': True,
# 
#     # Class to indicate required (better to set this in your Django form)
#     'required_css_class': '',
# 
#     # Class to indicate error (better to set this in your Django form)
#     'error_css_class': 'has-error',
# 
#     # Class to indicate success, meaning the field has valid input (better to set this in your Django form)
#     'success_css_class': 'has-success',
# 
#     # Renderers (only set these if you have studied the source and understand the inner workings)
#     'formset_renderers':{
#         'default': 'bootstrap3.renderers.FormsetRenderer',
#     },
#     'form_renderers': {
#         'default': 'bootstrap3.renderers.FormRenderer',
#     },
#     'field_renderers': {
#         'default': 'bootstrap3.renderers.FieldRenderer',
#         'inline': 'bootstrap3.renderers.InlineFieldRenderer',
#     },
# }

PASSWORD_HASER=[
        "django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher",
        "django.contrib.auth.hashers.SHA1PasswordHasher",
    ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
#     'bootstrap3',
    'gunicorn',
    'user_manager',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
#     'django_cprofile_middleware.middleware.ProfilerMiddleware',
]

ROOT_URLCONF = 'mqtt_auth.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR),'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mqtt_auth.wsgi.application'


CONNUM = 0
ALLTIME = 0.0
MINTIME = 0.0
MAXTIME = 0.0

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME' : 'mqtt',
        'USER' :'mqtt',
        'PASSWORD':'mqtt',
        'HOST' : '192.168.25.100',
        'PORT' : '5433',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    'devdb':{
        'ENGINE':'django.db.backends.postgresql_psycopg2',
        'NAME' : 'jieli_iot_idmaker',
        'USER' : 'postgres',
        'PASSWORD':'',
        'HOST':'192.168.25.105',
        'PORT':'5432',
        }

}








# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

AUTO_LOGOUT_DELAY = 1

APPEND_SLASH=True

## value is seconds 


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
# STATIC_ROOT = os.path.join(BASE_DIR)

STATICFILES_DIRS = (
        os.path.join(BASE_DIR,'static'),
        )

STATIC_ROOT = os.path.join(BASE_DIR)
STATIC_URL = '/static/'
